[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Transmit metrics over HTTP to Grafana
#[[outputs.http]]
#  url = "http://localhost:3000/api/live/push/lf0"
#  data_format = "influx"
#  [outputs.http.headers]
#    Authorization = "Bearer eyJrIjoiZnA4Y25LVFkzMXRHZmZ6SlU3UU1QUnB2NVZTNVdEMkIiLCJuIjoiVGVsZWdyYWYiLCJpZCI6MX0="


[[outputs.prometheus_client]]
  ## Address to listen on.
  listen = ":9273"
  string_as_label = true

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states
  report_active = false
  ## If true and the info is available then add core_id and physical_id tags
  core_tags = false

# Read metrics about memory usage
[[inputs.mem]]
  # no configuration

# Get the number of processes and group them by status
[[inputs.processes]]
  # no configuration

# Read metrics about swap memory usage
[[inputs.swap]]
  # no configuration

# Read metrics about system load & uptime
[[inputs.system]]
  # no configuration